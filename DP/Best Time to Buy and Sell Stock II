//
You are given an integer array prices where prices[i] is the price of a given stock on the ith day.

On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell 
it on the same day.

Find and return the maximum profit you can achieve.

Example 1:

Input: prices = [7,1,5,3,6,4]
Output: 7
Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.
Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.
Total profit is 4 + 3 = 7.
Example 2:

Input: prices = [1,2,3,4,5]
Output: 4
Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.
Total profit is 4.
Example 3:

Input: prices = [7,6,4,3,1]
Output: 0
Explanation: There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.
//

    ** Approach : Keep track of a boolean 'buy' to indicate whether we can buy a stock on that day otherwise we can sell that stock. Again here we will have two options
    whether to buy/sell this day or not to buy/sell on this day. Return the max profit as ans.

    int solve(int ind, bool buy, vector<int>& prices, vector<vector<int>> &dp) {
        if(ind >= prices.size()) {
            return 0;
        }
        if(dp[ind][buy] != -1) {
            return dp[ind][buy];
        }
        if(buy) {
            int buying = -prices[ind] + solve(ind+1, false, prices, dp);
            int notBuying = 0 + solve(ind+1, true, prices, dp);
            // Return the maximum profit by buying.
            return dp[ind][buy] = max(buying, notBuying);
        }
        else {
            int selling = prices[ind] + solve(ind+1, true, prices, dp);
            int notSelling = 0 + solve(ind+1, false, prices, dp);
            // Return the maximum profit by selling.
            return dp[ind][buy] = max(selling, notSelling);
        }
    }

    int maxProfit(vector<int>& prices) {
        vector<vector<int>> dp(prices.size(), vector<int>(2, -1));
        return solve(0, true, prices, dp);
    }
    T.C : O(N)
    S.C : O(N)
