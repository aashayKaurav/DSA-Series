//
Given two binary max heaps as arrays, merge the given heaps to form a new max heap.

Example 1:

Input  : 
n = 4 m = 3
a[] = {10, 5, 6, 2}, 
b[] = {12, 7, 9}
Output : 
{12, 10, 9, 2, 5, 7, 6}
//

    ** Approach : Simply put all the elements into the priority queue and then pop them and store into the array. Finally return the array.
    vector<int> mergeHeaps(vector<int> &a, vector<int> &b, int n, int m) {
        vector<int> ans;
        priority_queue<int> pq;
        
        for(int i=0; i<n; i++) {
            pq.push(a[i]);
        }
        for(int i=0; i<m; i++) {
            pq.push(b[i]);
        }
        while(!pq.empty()) {
            ans.push_back(pq.top());
            pq.pop();
        }
        return ans;
    }
    T.C : O((N+M)*(Log(N+M)))
    S.C : O(N+M)
