void heapify(int arr[], int n, int i) {
    int largest = i;
    int left = i*2;
    int right = i*2 + 1;
    
    if(left <= n && arr[largest] < arr[left]) {
        largest = left;
    }
    
    if(right <= n && arr[largest] < arr[right]) {
        largest = right;
    }
    
    if(largest != i) {
        swap(arr[largest], arr[i]);
        heapify(arr, n, largest);
    }
    else {
        return;
    }
}

void heapSort(int arr[], int size) {
    int n = size;
    
    while(n > 1) {
        swap(arr[1], arr[n]);
        n = n-1;
        heapify(arr, n, 1);
    }
}

int main() {
    int array[6] = {-1, 20, 25, 34, 58, 40};
    int n = 5;
    for(int i=n/2; i>0; i--) {
        heapify(array, n, i);
    }
    heapSort(array, n);
    
    cout << "After heap sort : " << endl;
    for(int i=1; i<=n; i++) {
        cout << array[i] << " ";
    }cout << endl;
    return 0;
}
    T.C : O(NlogN)
----------------------------------------------------------------------------
//
Given an array of size N. The task is to sort the array elements by completing functions heapify() and buildHeap() which are used to implement Heap Sort.

Example 1:

Input:
N = 5
arr[] = {4,1,3,9,7}
Output:
1 3 4 7 9
Explanation:
After sorting elements
using heap sort, elements will be
in order as 1,3,4,7,9.
//
        void heapify(int arr[], int n, int i)  
    {
        int largest = i;
        int left = 2*i + 1;
        int right = 2*i + 2;
        
        if(left < n && arr[largest] < arr[left]) {
            largest = left;
        }
        if(right < n && arr[largest] < arr[right]) {
            largest = right;
        }
        
        if(largest != i) {
            swap(arr[largest], arr[i]);
            heapify(arr, n, largest);
        }
    }

    public:
    //Function to build a Heap from array.
    void buildHeap(int arr[], int n)  
    {
        for(int i=(n/2)-1; i>=0; i--) {
            heapify(arr, n, i);
        }
    }

    
    public:
    //Function to sort an array using Heap Sort.
    void heapSort(int arr[], int n)
    {
        buildHeap(arr, n);
        for(int i=n-1; i>0; i--) {
            swap(arr[0], arr[i]);
            heapify(arr, i, 0);
        }
    }
    T.C : O(NLogN)
    S.C : O(1)
