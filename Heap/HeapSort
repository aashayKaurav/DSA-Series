void heapify(int arr[], int n, int i) {
    int largest = i;
    int left = i*2;
    int right = i*2 + 1;
    
    if(left <= n && arr[largest] < arr[left]) {
        largest = left;
    }
    
    if(right <= n && arr[largest] < arr[right]) {
        largest = right;
    }
    
    if(largest != i) {
        swap(arr[largest], arr[i]);
        heapify(arr, n, largest);
    }
    else {
        return;
    }
}

void heapSort(int arr[], int size) {
    int n = size;
    
    while(n > 1) {
        swap(arr[1], arr[n]);
        n = n-1;
        heapify(arr, n, 1);
    }
}

int main() {
    int array[6] = {-1, 20, 25, 34, 58, 40};
    int n = 5;
    for(int i=n/2; i>0; i--) {
        heapify(array, n, i);
    }
    heapSort(array, n);
    
    cout << "After heap sort : " << endl;
    for(int i=1; i<=n; i++) {
        cout << array[i] << " ";
    }cout << endl;
    return 0;
}
    T.C : O(NlogN)
