#include <bits/stdc++.h>

using namespace std;

class heap {
    public :
        int arr[100];
        int size;
        
        heap() {
            arr[0] = -1;
            size = 0;
        }
        
        void insert(int val) {
            size = size + 1;
            int index = size;
            arr[index] = val;
            
            while(index > 1) {
                int parent = index/2;
                if(arr[parent] < arr[index]) {
                    swap(arr[parent], arr[index]);
                    index = index/2;
                }
                else{
                    return;
                }
            }
        }
        
        void deleteElement() {
            if(size == 0) {
                cout << "Heap is empty!" << endl;
                return;
            }
            
            arr[1] = arr[size];
            size -= 1;
            int index = 1;
            
            while(index < size) {
                int left = index*2;
                int right = index*2 + 1;
                if(arr[index] < arr[left] && left <= size && arr[left] > arr[right]) {
                    swap(arr[left], arr[index]);
                    index = left;
                }
                else if(arr[index] < arr[right] && right <= size && arr[right] > arr[left]) {
                    swap(arr[right], arr[index]);
                    index = right;
                }
                else{
                    return;
                }
            }
        }
        
        void printHeap() {
            for(int i=1; i<=size; i++) {
                cout << arr[i] << " ";
            }
            cout << endl;
        }
};

void heapify(int arr[], int n, int i) {
    int largest = i;
    int left = i*2;
    int right = i*2 + 1;
    
    if(left <= n && arr[largest] < arr[left]) {
        largest = left;
    }
    
    if(right <= n && arr[largest] < arr[right]) {
        largest = right;
    }
    
    if(largest != i) {
        swap(arr[largest], arr[i]);
        heapify(arr, n, largest);
    }
    else {
        return;
    }
}


int main() {
    
    heap h;
    h.insert(30);
    h.insert(36);
    h.insert(42);
    h.insert(55);
    h.insert(28);
    h.printHeap();
    h.deleteElement();
    h.printHeap();
    
    int array[6] = {-1, 20, 25, 34, 58, 40};
    int n = 5;
    for(int i=n/2; i>0; i--) {
        heapify(array, n, i);
    }
    cout << "After heapify : " << endl;
    for(int i=1; i<=n; i++) {
        cout << array[i] << " ";
    }cout << endl;
    return 0;
    
}

Insert/Delete : O(logN)
Heapify : O(N)




