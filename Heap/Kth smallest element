//
Given an array arr[] and an integer K where K is smaller than size of array, the task is to find the Kth smallest element in the given array. 
It is given that all array elements are distinct.

Note :-  l and r denotes the starting and ending index of the array.

Example 1:

Input:
N = 6
arr[] = 7 10 4 3 20 15
K = 3
Output : 7
Explanation :
3rd smallest element in the given 
array is 7.
Example 2:

Input:
N = 5
arr[] = 7 10 4 20 15
K = 4
Output : 15
Explanation :
4th smallest element in the given 
array is 15.
//

    ** Approach : Use Priority queue or a hash to store the elements then increment the count until k then return kth smallest element.
    int kthSmallest(int arr[], int l, int r, int k) {
        vector<int> hash(100001, 0);
        for(int i=l; i<=r; i++) {
            hash[arr[i]]++;
        }
        int count = 0;
        for(int i=0; i<100001; i++) {
            if(hash[i] > 0) {
                count++;
            }
            if(count == k) {
                return i;
            }
        }
        return -1;
    }
    T.C : O(N)
    S.C : O(1)
