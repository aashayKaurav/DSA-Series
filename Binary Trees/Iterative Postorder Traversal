#include <bits/stdc++.h>

using namespace std;

struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};

struct Node* newNode(int data)
{
    struct Node* node = new Node;
    node->data = data;
    node->left = NULL;
    node->right = NULL;
 
    return (node);
}

// USING 2 STACKS
void postOrderTraversal(Node* root) {
    stack<Node*> st1;
    stack<Node*> st2;
    st1.push(root);
    while(!st1.empty()) {
        Node *temp = st1.top();
        st1.pop();
        st2.push(temp);
        if(temp->left != NULL) {
            st1.push(temp->left);
        }
        if(temp->right != NULL) {
            st1.push(temp->right);
        }
    }
    while(!st2.empty()){
        Node *temp = st2.top();
        st2.pop();
        cout << temp->data << " ";
    }
}

int main()
{
    Node* root = NULL;
    root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);
    root->left->left = newNode(4);
    root->left->right = newNode(5);
    root->right->left = newNode(6);
    root->right->right = newNode(7);
    
    postOrderTraversal(root);
    return 0;
}

T.C : O(N)
S.C : O(N)
