//
  Graph implementation using adjacency list.
//

    #include <bits/stdc++.h>

    using namespace std;
    
    class Graph {
        private :
            int vertices;
            vector<vector<int>> adjList;
            
        public :
            
            Graph(int vertices) {
                this->vertices = vertices;
                adjList.resize(vertices);
            }
            
            void addEdge(int u, int v) {
                adjList[u].push_back(v);
                adjList[v].push_back(u);
            }
            
            void printGraph() {
                for (int i = 0; i < vertices; i++) {
                    cout << "Vertex " << i << " : ";
                    for (int v : adjList[i]) {
                        cout << v << " ";
                    }
                    cout << endl;
                }
            }
    };
    
    
    int main() {
        
        int vertices;
        cout << "Enter the number of vertices : ";
        cin >> vertices;
        
        Graph g(vertices);
        
        g.addEdge(0, 1);
        g.addEdge(0, 4);
        g.addEdge(1, 3);
        g.addEdge(1, 2);
        g.addEdge(1, 4);
        g.addEdge(2, 3);
        g.addEdge(3, 4);
                
        g.printGraph();
        
        return 0;
    }
