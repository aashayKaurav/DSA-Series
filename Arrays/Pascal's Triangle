//
Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
//
    *Approach : Keep resizing the ith vector and store 1 in frist and last location. And in between keep adding arr[i-1][j-1] + arr[i-1][j]
    
vector<vector<int>> generate(int numRows) {
        vector<vector<int>> vec(numRows);
        for(int i=0; i<numRows; i++){
            vec[i].resize(i + 1);
            vec[i][0] = vec[i][i] = 1;
            for(int j=1; j<i; j++){
                vec[i][j] = vec[i-1][j-1] + vec[i-1][j];
            }
        }
        return vec;
    }
    T.C : O(N^2)
